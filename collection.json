{
	"info": {
		"_postman_id": "e85f9824-2bab-4801-9a2e-a0c017f8d7db",
		"name": "TEST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "404",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2b300efe-5136-430f-a15a-a127b7e56176",
						"exec": [
							"var moment = require('moment');",
							"pm.globals.set(\"todeyDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
							"// console.log(pm.globals.get(\"todeyDate\"));",
							"",
							"// // pm.globals.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
							"// pm.environment.set(\"current_timestamp\", moment().toISOString())",
							"// pm.environment.set(\"current_timestamp - 1 day\", moment().subtract(1, 'day').toISOString())",
							"// console.log(moment().toISOString());",
							"// console.log(moment().subtract(1, 'day').format(\"YYYY-MM-DD\"))",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae8532f9-642f-444f-84e6-a5dff750f138",
						"exec": [
							"let responseJson2 = pm.response.json();",
							"// console.log(responseJson2);",
							"",
							"const postRequest3 = {",
							"    // url:\"https://sandbox.driveroo.com/api/clockwork/024e5916-d002-47e8-83f9-15ba0860c583?page=\",",
							"//   url: pm.globals.get(\"sand\")+\"/api/clockwork/\"+pm.globals.get(\"API_keys\")+\"?dateFrom=\"+pm.globals.get(\"todeyDate\")+\"&dateTo=\"+pm.globals.get(\"todeyDate\")+\"&page=\",",
							"  url: \"https://sandbox.driveroo.com/api/clockwork/024e5916-d002-47e8-83f9-15ba0860c583?dateFrom=\"+pm.globals.get(\"todeyDate\")+\"&dateTo=\"+pm.globals.get(\"todeyDate\")+\"&page=\",",
							"    method: 'GET',",
							"  header: {",
							"    'Content-Type': 'application/json',",
							"    'X-Foo': 'bar'",
							"  },",
							"  body: {",
							"  }",
							"};",
							"",
							"// let JSONParse={\"data\":[]} ;",
							"let merged = {dataMethod:{},dataURL:{}};",
							"// let mergedARR={};",
							"",
							"postman.setGlobalVariable(\"globalFunction\", (parameters1, parameters2) => { ",
							"        pm.sendRequest(postRequest3.url+parameters1+\"&status=\"+parameters2, (error, response) => {",
							"            // console.log(error ? error : response.json());",
							"",
							"            let responseJson = response.json();",
							"            //   console.log(\"!!!!!!!!!!!1!!!!!!!!!!!!!\");",
							"            //   console.log(responseJson);  ",
							"            //   console.log(responseJson.last_page);  ",
							"             responseJson = response.json().data;",
							"",
							"",
							"            for (var i = 0; i < responseJson.length; i++) {",
							"                if (!merged.dataMethod[responseJson[i].method]) {",
							"",
							"                    merged.dataMethod[responseJson[i].method]= {URL: responseJson[i].url, data_id:{[responseJson[i].id]: [responseJson[i].method,responseJson[i].duration]}, user_id:{[responseJson[i].user_id]: 1} ,duration: responseJson[i].duration, count :1,totalDuration:responseJson[i].duration,totalUser:1,totalDuration:responseJson[i].duration,maxDuration:responseJson[i].duration};",
							"                    }",
							"                    ",
							"                if (!merged.dataURL[responseJson[i].url]) {",
							"",
							"                    merged.dataURL[responseJson[i].url]= {URL: responseJson[i].url, data_id:{[responseJson[i].id]: responseJson[i].duration}, user_id:{[responseJson[i].user_id]: 1} ,duration: responseJson[i].duration, count :1,totalDuration:responseJson[i].duration,totalUser:1,totalDuration:responseJson[i].duration,maxDuration:responseJson[i].duration};",
							"",
							"                } else {",
							"                    if (!merged.dataURL[responseJson[i].id]){",
							"                        merged.dataURL[responseJson[i].url].data_id[responseJson[i].id] = responseJson[i].duration;                        ",
							"                    }",
							"                    if (merged.dataURL[responseJson[i].user_id]){",
							"                        merged.dataURL[responseJson[i].url].user_id[responseJson[i].user_id] = 0;",
							"                        merged.dataURL[responseJson[i].url].totalUser+=1;",
							"                    }",
							"                    if (merged.dataURL[responseJson[i].url].user_id) {",
							"                        let qwe = merged.dataURL[responseJson[i].url].user_id[responseJson[i].user_id];",
							"                        if (!qwe){",
							"                            qwe=1;",
							"                            merged.dataURL[responseJson[i].url].user_id[responseJson[i].user_id] = qwe;",
							"                        }",
							"                        else{",
							"                            merged.dataURL[responseJson[i].url].user_id[responseJson[i].user_id] = Number(merged.dataURL[responseJson[i].url].user_id[responseJson[i].user_id])+1;",
							"                        }",
							"                    }",
							"                    if (Number(merged.dataURL[responseJson[i].url].maxDuration)<Number(responseJson[i].duration)){",
							"                        merged.dataURL[responseJson[i].url].maxDuration=Number(responseJson[i].duration);",
							"",
							"                    }",
							"                    merged.dataURL[responseJson[i].url].count =Number(merged.dataURL[responseJson[i].url].count)+1;",
							"                    merged.dataURL[responseJson[i].url].totalDuration = (Number(merged.dataURL[responseJson[i].url].totalDuration) + Number(responseJson[i].duration)).toFixed(2);",
							"                }",
							"            }",
							"            const dataMethodArr = Object.values(merged.dataMethod)",
							"            const dataURLArr = Object.values(merged.dataURL)",
							"            const resultArr = {",
							"                dataMethodArr,",
							"                dataURLArr",
							"            };",
							"            // console.log( resultArr);",
							"            pm.globals.set(\"JSON_Var\",resultArr);",
							"             console.log(pm.globals.get(\"JSON_Var\"));",
							"",
							"            // JSONParse.data.push(merged)",
							"",
							"            // pm.globals.set(\"JSON_Var\",merged);",
							"            //  console.log(pm.globals.get(\"JSON_Var\"));",
							"          ",
							"            // responseJson2 = pm.response.json();",
							"            //   console.log(\"!!!!!!!!!!!!2!!!!!!!!!!!!\");",
							"            //   console.log(responseJson2);               ",
							"            //   console.log(responseJson2.last_page);               ",
							"    }); ",
							"});",
							"",
							"for (let i = 1; i<=responseJson2.last_page; ++i){",
							"    eval(globals.globalFunction)(i,404);",
							"    console.log(\"------------------- cikle = \"+i+\"--------------------------\");",
							"}",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.data[0].id).to.be.a(\"string\");",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://sandbox.driveroo.com/api/clockwork/024e5916-d002-47e8-83f9-15ba0860c583?dateFrom={{todeyDate}}&dateTo={{todeyDate}}&page=&sort=id&order=desc&id=&user=&time=&url=&ip=&status=404&method=&duration=",
					"protocol": "https",
					"host": [
						"sandbox",
						"driveroo",
						"com"
					],
					"path": [
						"api",
						"clockwork",
						"024e5916-d002-47e8-83f9-15ba0860c583"
					],
					"query": [
						{
							"key": "dateFrom",
							"value": "{{todeyDate}}"
						},
						{
							"key": "dateTo",
							"value": "{{todeyDate}}"
						},
						{
							"key": "page",
							"value": ""
						},
						{
							"key": "sort",
							"value": "id"
						},
						{
							"key": "order",
							"value": "desc"
						},
						{
							"key": "id",
							"value": ""
						},
						{
							"key": "user",
							"value": ""
						},
						{
							"key": "time",
							"value": ""
						},
						{
							"key": "url",
							"value": ""
						},
						{
							"key": "ip",
							"value": ""
						},
						{
							"key": "status",
							"value": "404"
						},
						{
							"key": "method",
							"value": ""
						},
						{
							"key": "duration",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "recive Ver",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "18431cbd-0238-4043-807b-446400fd61a3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cabd1d2d-c6ac-4fc4-a76d-42b7727a9fa2",
						"exec": [
							"console.log(\"==\");",
							"console.log(pm.globals.get(\"JSON_Var\"));",
							"console.log(\"==\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.google.com/",
					"protocol": "https",
					"host": [
						"www",
						"google",
						"com"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}